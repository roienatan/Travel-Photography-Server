{"version":3,"sources":["actions/index.js","constants/action-types.js","utils.js","contexts/index.js","components/Loading.jsx","components/AddCountry.jsx","components/Countries.jsx","assets/icons/logo.icon.js","components/Sidebar.jsx","components/Routes/Home.jsx","components/AddImage.jsx","services/api.js","components/Image.jsx","components/Country.jsx","components/Routes/About.jsx","components/Routes.jsx","assets/icons/dark_mode_icon.js","components/DarkMode.jsx","components/Logout.jsx","components/DesktopView.jsx","assets/icons/hamburger.icon.js","components/TopBarMobile.jsx","components/Menu.jsx","components/MobileView.jsx","components/Routes/Login.jsx","components/ResponsiveView.jsx","App.js","serviceWorker.js","sagas/index.js","reducers/auth.js","constants/colors.js","reducers/layout.js","reducers/countries.js","reducers/images.js","reducers/index.js","store/index.js","index.js","assets/icons/loading.svg","assets/roie-natan.png"],"names":["toggleMenu","showMenu","type","isAdmin","sessionStorage","getItem","isSelected","location","path","pathname","includes","toLowerCase","search","ThemeContext","React","createContext","Loading","className","width","src","LoadingIcon","alt","AddCountry","dispatch","useDispatch","addingCountry","useSelector","state","countriesReducer","useState","newCountry","setNewCountry","placeholder","value","onChange","e","target","onClick","country","Countries","color","useContext","loading","countriesData","countries","screenSize","layoutReducer","history","useHistory","useLocation","setSearch","useEffect","entries","index","name","push","key","_id","id","style","backgroundColor","secondary","length","Logo","props","version","xmlns","viewBox","preserveAspectRatio","transform","fill","stroke","d","SideBar","textColor","Home","queryString","require","AddImage","uploadedImage","setUploadedImage","description","setDescription","addingImage","imagesReducer","imageInput","createRef","onSubmit","preventDefault","parsedURL","parse","image","countryID","addImage","ref","current","files","required","htmlFor","rows","API","Image","imageData","Country","imagesData","images","map","About","MyImage","window","href","Routes","exact","DarkMode","xlink","overflow","isDarkMode","darkMode","highlightedColor","Logout","clear","DesktopView","authenticated","authReducer","Hamburger","TopBarMobile","marginLeft","Menu","showCountries","setShowCountries","handleClick","contentBackgroundColor","MobileView","Login","error","username","setUsername","password","setPassword","disabled","setDisabled","event","autoComplete","ResponsiveView","Fragment","App","document","documentElement","setProperty","matchMedia","addListener","changeScreenSize","matches","Provider","mainBackgroundColor","Boolean","hostname","match","login","getCountries","addCountry","getCountryImages","getImage","actionWatcher","rootSaga","payload","fetch","then","res","status","Error","statusText","json","response","put","setItem","token","axios","url","method","headers","data","formData","FormData","append","enctype","takeLatest","all","initialState","COLORS","LIGHT_MODE","DARK_MODE","reducers","combineReducers","action","showUserTooltip","sagaMiddleware","createSagaMiddleware","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","run","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message","module","exports"],"mappings":"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","file":"static/js/main.37d1f1d9.chunk.js","sourcesContent":["import * as types from '../constants/action-types';\n\nexport const login = ({ username, password }) => ({\n    type: types.LOGIN,\n    username,\n    password\n})\n\nexport const logout = () => ({\n    type: types.LOGOUT\n})\n\nexport const toggleDarkMode = darkMode => ({\n    type: types.TOGGLE_DARK_MODE,\n    darkMode\n})\n\nexport const toggleMenu = showMenu => ({\n    type: types.TOGGLE_MENU,\n    showMenu\n})\n\nexport const changeScreenSize = screenSize => ({\n    type: types.CHANGE_SCREEN_SIZE,\n    screenSize\n})\n\nexport const getCountries = () => ({\n    type: types.GET_COUNTRIES\n})\n\nexport const addCountry = country => ({\n    type: types.ADD_COUNTRY,\n    country\n})\n\nexport const addImage = (image, description, countryID) => ({\n    type: types.ADD_IMAGE,\n    image,\n    description,\n    countryID\n})\n\nexport const getImages = (countryID) => ({\n    type: types.GET_COUNTRY_IMAGES,\n    countryID\n})\n","export const LOGIN = 'LOGIN';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT = 'LOGOUT';\n\nexport const TOGGLE_DARK_MODE = 'TOGGLE_DARK_MODE';\nexport const TOGGLE_MENU = 'TOGGLE_MENU';\n\nexport const GET_COUNTRIES = 'GET_COUNTRIES';\nexport const GET_COUNTRIES_SUCCESS = 'GET_COUNTRIES_SUCCESS';\nexport const GET_COUNTRIES_FAIL = 'GET_COUNTRIES_FAIL';\n\nexport const GET_IMAGE = 'GET_IMAGE';\nexport const GET_IMAGE_SUCCESS = 'GET_IMAGE_SUCCESS';\nexport const GET_IMAGE_FAIL = 'GET_IMAGE_FAIL';\n\nexport const GET_COUNTRY_IMAGES = 'GET_IMAGES';\nexport const GET_COUNTRY_IMAGES_SUCCESS = 'GET_IMAGES_SUCCESS';\nexport const GET_COUNTRY_IMAGES_FAIL = 'GET_IMAGES_FAIL';\n\nexport const ADD_COUNTRY = 'ADD_COUNTRY';\nexport const ADD_COUNTRY_SUCCESS = 'ADD_COUNTRY_SUCCESS';\nexport const ADD_COUNTRY_FAIL = 'ADD_COUNTRY_FAIL';\n\nexport const ADD_IMAGE = 'ADD_IMAGE';\nexport const ADD_IMAGE_SUCCESS = 'ADD_IMAGE_SUCCESS';\nexport const ADD_IMAGE_FAIL = 'ADD_IMAGE_FAIL';\n\nexport const CHANGE_SCREEN_SIZE = 'CHANGE_SCREEN_SIZE';\n","export const getScreenSize = () => {\n  return window.matchMedia('(min-width: 770px)').matches ? 'LARGE' : 'SMALL';\n};\n\nexport const isAdmin = () => {\n  return sessionStorage.getItem('admin') === 'true';\n};\n\nexport const isSelected = (location, path) => {\n  return location.pathname.includes(path.toLowerCase()) || location.search.includes(path);\n};\n","import React from 'react';\n\nexport const ThemeContext = React.createContext();\n","import React from 'react';\nimport '../styles/Loading.scss';\nimport LoadingIcon from '../assets/icons/loading.svg';\n\nexport default function Loading() {\n  return (\n    <div className='loading-wrapper'>\n      <img width='40px' src={LoadingIcon} alt='loader' />\n    </div>\n  )\n}\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addCountry } from '../actions/index';\nimport Loading from './Loading';\nimport '../styles/AddCountry.scss';\n\nexport default function AddCountry() {\n  const dispatch = useDispatch();\n  const addingCountry = useSelector(state => state.countriesReducer.addingCountry);\n  const [newCountry, setNewCountry] = useState('');\n  const handleAddCountry = () => {\n    dispatch(addCountry(newCountry));\n    setNewCountry('');\n  };\n\n  return (\n    <div className='add-country-wrapper'>\n      <div className={addingCountry ? 'add-country disabled' : 'add-country'}>\n        <input type='text' placeholder='Add country...' value={newCountry} onChange={e => setNewCountry(e.target.value)} />\n        <button className={newCountry === '' ? 'add-button disabled' : 'add-button'} onClick={handleAddCountry}>ADD</button>\n      </div>\n      {addingCountry && <Loading />}\n    </div>\n  )\n}\n","import React, { useState, useEffect, useContext } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { getCountries, toggleMenu } from '../actions/index';\nimport { isAdmin, isSelected } from '../utils';\nimport { ThemeContext } from '../contexts/index';\nimport Loading from './Loading';\nimport AddCountry from './AddCountry';\nimport '../styles/Countries.scss';\n\nexport default function Countries() {\n  const dispatch = useDispatch();\n  const color = useContext(ThemeContext);\n  const loading = useSelector(state => state.countriesReducer.loading);\n  const countriesData = useSelector(state => state.countriesReducer.countries);\n  const screenSize = useSelector(state => state.layoutReducer.screenSize);\n  const history = useHistory();\n  const location = useLocation();\n  const [search, setSearch] = useState('');\n\n  useEffect(() => {\n    dispatch(getCountries());\n  }, [dispatch])\n\n  const handleClick = id => {\n    history.push({ pathname: '/countries', search: `?id=${id}` });\n    if (screenSize === 'SMALL') {\n      dispatch(toggleMenu(false));\n    }\n  };\n\n  let countries = [];\n  for (const [index, country] of countriesData.entries()) {\n    if (country.name.toLowerCase().includes(search.toLowerCase())) {\n      countries.push(<div\n        key={index}\n        className={isSelected(location, country._id) ? 'link country-link selected' : 'link country-link'}\n        onClick={() => handleClick(country._id)}>{country.name}</div>);\n    }\n  }\n\n  return (\n    <div className='countries-wrapper'>\n      <div className={loading ? 'countries disabled' : 'countries'}>\n        {isAdmin() && <AddCountry />}\n        <input type='text' className='search-input' placeholder='Search...' onChange={e => setSearch(e.target.value)} style={{ backgroundColor: color.secondary }} />\n        <div className='countries-list'>\n          {countries}\n        </div>\n        {!loading && countries.length === 0 && <span className='no-results'>No Results</span>}\n      </div>\n      {loading && <Loading />}\n    </div>\n  )\n}\n","import React from 'react';\n\nexport default function Logo(props) {\n    return <svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\"\n        width={props.width} viewBox=\"0 0 128.000000 128.000000\"\n        preserveAspectRatio=\"xMidYMid meet\">\n        <g transform=\"translate(0.000000,128.000000) scale(0.100000,-0.100000)\"\n            fill={props.fill} stroke=\"none\">\n            <path d=\"M241 1249 c-157 -31 -253 -194 -207 -353 14 -47 30 -71 93 -137 l77\n   -80 50 50 50 50 -66 69 c-37 38 -70 81 -74 96 -16 66 23 135 90 161 78 30 95\n   19 331 -216 l211 -209 49 50 50 50 -210 210 c-222 222 -263 253 -355 263 -25\n   3 -65 1 -89 -4z\"/>\n            <path d=\"M933 1250 c-64 -13 -113 -43 -181 -112 l-62 -64 50 -49 50 -49 67 66\n   c74 71 112 87 166 69 42 -14 85 -58 96 -99 20 -69 3 -93 -222 -319 l-211 -213\n   44 -45 c24 -25 49 -45 55 -45 6 0 108 98 227 218 246 248 253 260 246 384 -4\n   84 -24 130 -75 182 -65 65 -160 94 -250 76z\"/>\n            <path d=\"M278 663 c-142 -144 -222 -232 -234 -258 -26 -60 -24 -178 4 -231 34\n   -66 69 -101 129 -131 73 -35 164 -37 236 -5 48 21 177 135 177 157 0 6 -20 31\n   -45 55 l-45 44 -68 -66 c-92 -89 -142 -99 -219 -42 -38 29 -57 82 -48 132 6\n   31 40 70 216 247 115 116 209 215 209 220 0 10 -80 95 -90 95 -3 0 -103 -98\n   -222 -217z\"/>\n            <path d=\"M437 542 c-20 -21 -37 -42 -37 -48 0 -5 96 -105 213 -221 239 -240\n   265 -257 377 -256 107 0 201 58 246 152 26 53 31 171 9 228 -18 46 -137 183\n   -159 183 -7 0 -32 -20 -56 -45 l-44 -45 56 -58 c71 -71 93 -118 78 -170 -19\n   -71 -91 -120 -159 -107 -30 5 -72 42 -246 216 -116 115 -217 209 -226 209 -8\n   0 -32 -17 -52 -38z\"/>\n        </g>\n    </svg>\n}","import React, { useContext } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport Countries from './Countries';\nimport { isSelected } from '../utils';\nimport { ThemeContext } from '../contexts/index';\nimport Logo from '../assets/icons/logo.icon';\nimport '../styles/Sidebar.scss';\n\nexport default function SideBar() {\n  const history = useHistory();\n  const location = useLocation();\n  const color = useContext(ThemeContext);\n  return (\n    <div className='sidebar-wrapper'>\n      <div className='links'>\n        <div className='logo-wrapper'>\n          <Logo fill={color.textColor} width='50px' />\n          <div className='logo-title'>ROIE NATAN<br /><b>TRAVEL PHOTOGRAPHER</b></div>\n        </div>\n        <div\n          className={location.pathname === '/' ? 'link sidebar-link selected' : 'link sidebar-link'}\n          onClick={() => history.push('./')}>HOME</div>\n        <div\n          className={isSelected(location, 'about') ? 'link sidebar-link selected' : 'link sidebar-link'}\n          onClick={() => history.push('./about')}>ABOUT</div>\n        <div className='sidebar-link'>COUNTRIES</div>\n        <Countries />\n      </div>\n    </div>\n  )\n}\n","import React from 'react';\nimport '../../styles/Routes/Home.scss';\n\nexport default function Home() {\n  return (\n    <div className='home-wrapper'>Home</div>\n  )\n}\n","import React, { useState, useContext } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { addImage } from '../actions/index';\nimport Loading from './Loading';\nimport '../styles/AddImage.scss';\nimport { ThemeContext } from '../contexts/index';\nconst queryString = require('query-string');\n\nexport default function AddImage() {\n  const dispatch = useDispatch();\n  const [uploadedImage, setUploadedImage] = useState();\n  const [description, setDescription] = useState('');\n  const addingImage = useSelector(state => state.imagesReducer.addingImage);\n  const location = useLocation();\n  const imageInput = React.createRef();\n  const color = useContext(ThemeContext);\n\n  const updateImage = e => {\n    e.preventDefault();\n    setUploadedImage(imageInput.current.files[0]);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const parsedURL = queryString.parse(location.search);\n    dispatch(addImage(uploadedImage, description, parsedURL.id));\n    setUploadedImage();\n    setDescription();\n  };\n\n  return (\n    <div className='add-image-wrapper'>\n      <div className={addingImage ? 'disabled' : ''}>\n        <form className='add-image-form' onSubmit={handleSubmit}>\n          <input id='addImage' className='select-image' type='file' ref={imageInput} onChange={updateImage} required />\n          <label className='link' htmlFor='addImage'>{uploadedImage ? 'Change' : 'Select Image'}</label>\n          {uploadedImage && <span className='selected-image-name'>{uploadedImage.name}</span>}\n          <textarea\n            value={description}\n            className='add-description'\n            rows=\"3\"\n            onChange={e => setDescription(e.target.value)}\n            placeholder='Add a description'\n            style={{ color: color.textColor }}\n            required />\n          <input\n            className={uploadedImage && description !== '' ? 'upload-image link' : 'upload-image disabled'}\n            type=\"submit\"\n            value=\"UPLOAD\" />\n        </form>\n      </div>\n      {addingImage && <Loading />}\n    </div>\n  )\n}\n","export const API = {\n    LOGIN: '/authenticate/login',\n    GET_COUNTRIES: '/countries/getCountries',\n    ADD_COUNTRY: '/countries/addCountry',\n    GET_IMAGE: '/images/getImage/',\n    GET_COUNTRY_IMAGES: '/images/getCountryImages/',\n    ADD_IMAGE: '/images/addImage',\n};\n\n/* LOCAL DEV */\n\n// export const API = {\n//   LOGIN: 'http://localhost:3001/authenticate/login',\n//   GET_COUNTRIES: 'http://localhost:3001/countries/getCountries',\n//   ADD_COUNTRY: 'http://localhost:3001/countries/addCountry',\n//   GET_IMAGE: 'http://localhost:3001/images/getImage/',\n//   GET_COUNTRY_IMAGES: 'http://localhost:3001/images/getCountryImages/',\n//   ADD_IMAGE: 'http://localhost:3001/images/addImage',\n// };\n","import React from 'react';\nimport '../styles/Image.scss';\nimport { API } from '../services/api';\n\nexport default function Image(props) {\n  return (\n    <div className='image-wrapper'>\n      <img\n        className='image'\n        src={API.GET_IMAGE + props.imageData.id}\n        alt={props.imageData.description} />\n      <span className='image-description'>{props.imageData.description}</span>\n    </div>\n  )\n}\n","import React, { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getImages } from '../actions/index';\nimport AddImage from './AddImage';\nimport Image from './Image';\nimport Loading from './Loading';\nimport { isAdmin } from '../utils';\nimport '../styles/Country.scss';\nconst queryString = require('query-string');\n\nexport default function Country() {\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const imagesData = useSelector(state => state.imagesReducer.images);\n  const loading = useSelector(state => state.imagesReducer.loading);\n\n  useEffect(() => {\n    const parsedURL = queryString.parse(location.search);\n    dispatch(getImages(parsedURL.id));\n  }, [location.search, dispatch])\n\n  const images = imagesData.map(image => {\n    return <Image key={image.id} imageData={image} />\n  });\n\n  return (\n    <div className='country-wrapper'>\n      {isAdmin() && <AddImage />}\n      {!loading && images.length === 0 && <span className='no-results'>No Results</span>}\n      {!loading && images}\n      {loading && <Loading />}\n    </div>\n  )\n}\n","import React from 'react';\nimport '../../styles/Routes/About.scss';\nimport MyImage from '../../assets/roie-natan.png';\n\nexport default function About() {\n  const mailTo = () => {\n    window.location.href = 'mailto:roie.natan@gmail.com';\n  }\n  return (\n    <div className='about-wrapper'>\n      <img className='my-image' src={MyImage} alt='Roie Natan' />\n      <p>\n        My love of nature long preceded my love of photography. Today I spend as much time as I can in nature hiking and backpacking.\n        I enjoy traveling to new and exotic locations, especially remote places.\n        I find a deep spirituality in nature and I hope for it to become evident in my photography.\n        I put a lot of effort into these images and I hope that my passion for traveling and photographing can translate into\n        something special for the viewer.</p>\n\n      <p>\n        The main idea of Travel Photography is to tell the story and experiences you had through the pictures,\n        meaning whenever someone watches a picture he can feel the mood and the atmosphere of the place or the situation.\n            I carefully selected the best pictures that describe this concept. Enjoy looking at my images!</p>\n\n      <p>\n        I aim to photograph the world in a way that will help others appreciate and care for it.\n        I hope to express the deep spirituality that I find in nature and to bring back images to people that\n        might not otherwise have an opportunity to witness the beauty.</p>\n\n      <p>Feel free to reach me at: <div className='link email' onClick={mailTo}>roie.natan@gmail.com</div></p>\n    </div>\n  )\n}","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Home from './Routes/Home';\nimport Country from './Country';\nimport About from './Routes/About';\n\nexport default function Routes() {\n  return (\n    <Switch>\n      <Route path='/' exact>\n        <Home />\n      </Route>\n      <Route path='/countries'>\n        <Country />\n      </Route>\n      <Route path='/about'>\n        <About />\n      </Route>\n    </Switch>\n  )\n}\n","import React from 'react';\n\nexport default function DarkMode(props) {\n    return <svg fill={props.fill} width='35px' viewBox=\"0 0 96 96\" xmlns=\"http://www.w3.org/2000/svg\" xlink=\"http://www.w3.org/1999/xlink\" id=\"Icons_MoonAndStars\" overflow=\"hidden\">\n        <path d=\"M47 12.5C43.3 10.7 39.5 9.5 35.7 9 46.7 19.9 50 37 42.7 51.7 35.5 66.4 19.7 74 4.5 71.9 7.2 74.6 10.5 77 14.1 78.8 32.4 87.9 54.6 80.4 63.6 62.1 72.6 43.8 65.3 21.7 47 12.5Z\" />\n        <path d=\"M86.9 54.5C86.7 54.2 86.7 53.8 86.9 53.5L88.8 50.7C89 50.3 89 49.9 88.8 49.6 88.6 49.3 88.1 49.1 87.8 49.2L84.7 50C84.3 50.1 83.9 49.9 83.7 49.6L81.8 46.8C81.5 46.4 81.1 46.3 80.7 46.4 80.3 46.5 80 46.9 80 47.3L79.8 50.7C79.8 51.1 79.5 51.4 79.1 51.6L76 52.3C75.6 52.4 75.3 52.7 75.3 53.2 75.3 53.6 75.5 54 75.9 54.1L77.2 54.8 78.9 55.7C79 55.8 79.2 55.9 79.3 56.1 79.4 56.3 79.4 56.4 79.4 56.6L79.4 60C79.4 60.4 79.6 60.8 80 60.9 80.4 61 80.8 60.9 81.1 60.6L83.3 57.9C83.6 57.6 84 57.5 84.4 57.6L87.7 58.8C88.1 58.9 88.5 58.8 88.8 58.5 89.1 58.2 89.1 57.7 88.9 57.4L86.9 54.5Z\" />\n        <path d=\"M77.4 29.6 80.1 24.7C80.4 24.1 81 23.8 81.7 23.9L87.2 24.8C87.9 24.9 88.5 24.6 88.8 24 89.1 23.4 89 22.6 88.6 22.2L84.8 18.1C84.4 17.7 84.3 17 84.5 16.4L86.6 11.3C86.8 10.7 86.7 10 86.3 9.6 85.9 9.2 85.1 9 84.6 9.3L79.9 11.6C79.3 11.9 78.6 11.7 78.2 11.3L74.4 7.5C73.9 7 73.1 6.9 72.5 7.1 71.9 7.4 71.6 8.1 71.6 8.7L72.3 14C72.4 14.7 72.1 15.3 71.5 15.6L66.8 17.9C66.2 18.2 65.9 18.8 66 19.5 66.1 20.1 66.6 20.7 67.2 20.8L69.5 21.5 72.5 22.4C72.8 22.5 73 22.7 73.3 22.9 73.5 23.1 73.6 23.4 73.7 23.7L74.6 29.2C74.7 29.9 75.2 30.4 75.9 30.5 76.6 30.6 77.1 30.2 77.4 29.6Z\" /></svg>\n}\n","import React, { useContext } from 'react';\nimport DarkModeIcon from '../assets/icons/dark_mode_icon';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { toggleDarkMode } from '../actions/index';\nimport { ThemeContext } from '../contexts/index';\nimport '../styles/DarkMode.scss';\n\nexport default function DarkMode() {\n  const dispatch = useDispatch();\n  const isDarkMode = useSelector(state => state.layoutReducer.darkMode);\n  const color = useContext(ThemeContext);\n\n  return (\n    <div className='dark-mode-wrapper link' onClick={() => dispatch(toggleDarkMode(!isDarkMode))} >\n      <DarkModeIcon fill={isDarkMode ? color.highlightedColor : color.textColor} />\n    </div>\n  )\n}\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { logout } from '../actions/index';\nimport '../styles/Logout.scss';\n\nexport default function Logout() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const handleLogout = () => {\n    sessionStorage.clear();\n    dispatch(logout());\n    history.push('./login');\n  };\n\n  return (\n    <div className='link logout-wrapper' onClick={handleLogout}>Logout</div>\n  )\n}\n","import React from 'react';\nimport Sidebar from './Sidebar';\nimport Routes from './Routes';\nimport DarkMode from './DarkMode';\nimport Logout from './Logout';\nimport { useSelector } from 'react-redux';\nimport '../styles/DesktopView.scss';\n\nexport default function DesktopView() {\n  const authenticated = useSelector(state => state.authReducer.authenticated);\n  return (\n    <div className='desktop-view-wrapper'>\n      {authenticated && <Logout />}\n      <DarkMode />\n      <div className='desktop-content-wrapper'>\n        <Sidebar />\n        <Routes />\n      </div>\n    </div>\n  )\n}\n","import React from 'react';\n\nexport default function Hamburger(props) {\n    return <svg fill={props.fill} width='35px' viewBox=\"0 0 96 96\" xmlns=\"http://www.w3.org/2000/svg\" xlink=\"http://www.w3.org/1999/xlink\" id=\"Icons_HamburgerMenuIcon\" overflow=\"hidden\">\n        <path d=\"M11 30 48 30 85 30 85 18 11 18Z\" />\n        <path d=\"M11 54 48 54 85 54 85 42 11 42Z\" /><path d=\"M11 78 48 78 85 78 85 66 11 66Z\" /></svg>\n}","import React, { useContext } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toggleMenu } from '../actions/index';\nimport HamburgerIcon from '../assets/icons/hamburger.icon';\nimport { ThemeContext } from '../contexts/index';\nimport DarkMode from './DarkMode';\nimport Logo from '../assets/icons/logo.icon';\nimport '../styles/TopBarMobile.scss';\n\nexport default function TopBarMobile() {\n  const dispatch = useDispatch();\n  const color = useContext(ThemeContext);\n  const showMenu = useSelector(state => state.layoutReducer.showMenu);\n\n  return (\n    <div className='top-bar-mobile-wrapper'>\n      <div className='link' onClick={() => dispatch(toggleMenu(!showMenu))} style={{ marginLeft: '20px' }} >\n        <HamburgerIcon fill={showMenu ? color.highlightedColor : color.textColor} />\n      </div>\n      <Logo fill={color.textColor} width='50px' />\n      <DarkMode />\n    </div>\n  )\n}\n","import React, { useContext, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { ThemeContext } from '../contexts/index';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toggleMenu } from '../actions/index';\nimport Countries from './Countries';\nimport Logout from './Logout';\nimport '../styles/Menu.scss';\n\nexport default function Menu() {\n  const [showCountries, setShowCountries] = useState(false);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const authenticated = useSelector(state => state.authReducer.authenticated);\n  const color = useContext(ThemeContext);\n\n  const handleClick = pathname => {\n    history.push(pathname);\n    dispatch(toggleMenu(false));\n  };\n\n  return (\n    <div className='menu-wrapper' style={{ backgroundColor: color.contentBackgroundColor }}>\n      <div className='menu-link' onClick={() => handleClick('./')}>HOME</div>\n      <div className='menu-link' onClick={() => setShowCountries(true)}>COUNTRIES</div>\n      <div className='menu-link' onClick={() => handleClick('./about')}>ABOUT</div>\n      {authenticated && <Logout />}\n      <div className={showCountries ? 'menu-countries-wrapper show' : 'menu-countries-wrapper'} style={{ backgroundColor: color.contentBackgroundColor }}>\n        <div className='close' onClick={() => setShowCountries(false)}>&times;</div>\n        <Countries />\n      </div>\n    </div>\n  )\n}\n","import React from 'react';\nimport TopBarMobile from './TopBarMobile';\nimport Routes from './Routes';\nimport { useSelector } from 'react-redux';\nimport Menu from './Menu'\nimport '../styles/MobileView.scss';\n\nexport default function MobileView() {\n  const showMenu = useSelector(state => state.layoutReducer.showMenu);\n\n  return (\n    <div className='mobile-view-wrapper'>\n      <TopBarMobile />\n      <div className='mobile-content-wrapper'>\n        <Routes />\n        {showMenu && <Menu />}\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport '../../styles/Routes/Login.scss';\nimport Logo from '../../assets/icons/logo.icon';\nimport { login } from '../../actions/index';\nimport Loading from '../Loading';\n\nexport default function Login() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const authenticated = useSelector(state => state.authReducer.authenticated);\n  const loading = useSelector(state => state.authReducer.loading);\n  const error = useSelector(state => state.authReducer.error);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [disabled, setDisabled] = useState(true);\n\n  if (authenticated) {\n    history.push('./');\n  }\n\n  useEffect(() => {\n    setDisabled(() => username === '' || password === '');\n  }, [username, password])\n\n  const handleLogin = event => {\n    event.preventDefault();\n    dispatch(login({ username: username, password: password }));\n  };\n\n  return (\n    <div className='login-wrapper'>\n      <Logo width='50px' />\n      <form className={loading ? 'form-decoration disabled' : 'form-decoration'} onSubmit={handleLogin}>\n        <label>Username</label>\n        <input type='text' name='username' value={username} autoComplete='username' onChange={e => setUsername(e.target.value)} />\n        <label>Password</label>\n        <input type='password' name='password' value={password} autoComplete='current-password' onChange={e => setPassword(e.target.value)} />\n        <input className={disabled ? 'link login-btn disabled' : 'link login-btn'} type='submit' value='Sign In' />\n      </form>\n      {error && <div className='login-error-wrapper'>\n        <div className='error-text'>The username or password you entered is incorrect</div>\n      </div>}\n      {loading && <Loading />}\n    </div>\n  )\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport DesktopView from './DesktopView';\nimport MobileView from './MobileView';\nimport { useLocation } from 'react-router-dom';\nimport Login from './Routes/Login';\n\nexport default function ResponsiveView() {\n  const screenSize = useSelector(state => state.layoutReducer.screenSize);\n  const location = useLocation();\n\n  return (\n    <React.Fragment>\n      { location.pathname.includes('login') ? <Login /> : screenSize === 'LARGE' ? <DesktopView /> : <MobileView />}\n    </React.Fragment>\n  )\n}\n","import React from 'react';\nimport './App.scss';\nimport { changeScreenSize } from './actions/index';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ResponsiveView from './components/ResponsiveView';\nimport { ThemeContext } from './contexts/index';\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  const color = useSelector(state => state.layoutReducer.color);\n  document.documentElement.style.setProperty('--color', color.textColor);\n  const screenSize = window.matchMedia('(min-width: 770px)');\n  screenSize.addListener(screenSize => {\n    dispatch(changeScreenSize(screenSize.matches ? 'LARGE' : 'SMALL'));\n  })\n\n  return (\n    <ThemeContext.Provider value={color}>\n      <div style={{ backgroundColor: color.mainBackgroundColor, color: color.textColor }}>\n        <ResponsiveView />\n      </div>\n    </ThemeContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { all, put, takeLatest } from 'redux-saga/effects';\nimport { API } from '../services/api';\nimport * as types from '../constants/action-types';\nimport axios from 'axios';\n\nfunction* login(payload) {\n  try {\n    const response = yield fetch(API.LOGIN + '/username/' + payload.username + '/password/' + payload.password).then(res => {\n      if (res.status === 401) { throw Error(res.statusText); }\n      return res.json();\n    });\n    yield put({ type: types.LOGIN_SUCCESS });\n    sessionStorage.setItem('admin', 'true');\n    sessionStorage.setItem('token', response.token);\n  } catch (error) {\n    yield put({ type: types.LOGIN_FAIL });\n  }\n}\n\nfunction* getCountries() {\n  try {\n    const countries = yield axios({\n      url: API.GET_COUNTRIES,\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n      }\n    }).then(res => { return res.data });\n    yield put({ type: types.GET_COUNTRIES_SUCCESS, countries: countries });\n  } catch (error) {\n    yield put({ type: types.GET_COUNTRIES_FAIL });\n  }\n\n}\n\nfunction* addCountry(payload) {\n  try {\n    yield axios({\n      url: API.ADD_COUNTRY,\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'Authorization': sessionStorage.getItem(\"token\")\n      },\n      data: { name: payload.country }\n    });\n    //document.getElementById('addCountry').value=''; // id='addCountry'\n    yield getCountries();\n    yield put({ type: types.ADD_COUNTRY_SUCCESS });\n  } catch (error) {\n    yield put({ type: types.ADD_COUNTRY_FAIL });\n  }\n}\n\nfunction* getCountryImages(payload) {\n  try {\n    const imagesData = yield axios({\n      url: API.GET_COUNTRY_IMAGES + payload.countryID,\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }).then(res => { return res.data });\n    yield put({ type: types.GET_COUNTRY_IMAGES_SUCCESS, images: imagesData });\n  } catch (error) {\n    yield put({ type: types.GET_COUNTRY_IMAGES_FAIL });\n  }\n}\n\nfunction* addImage(payload) {\n  let formData = new FormData();\n  formData.append('countryID', payload.countryID);\n  formData.append('image', payload.image);\n  formData.append('description', payload.description);\n  formData.enctype = 'multipart/form-data';\n  try {\n    yield axios({\n      url: API.ADD_IMAGE,\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'Authorization': sessionStorage.getItem(\"token\")\n      },\n      data: formData\n    });\n    //document.getElementById('addImageForm').reset(); // id='addImageForm'\n    yield put({ type: types.ADD_IMAGE_SUCCESS });\n    yield getCountryImages({ countryID: payload.countryID });\n\n  } catch (error) {\n    yield put({ type: types.ADD_IMAGE_FAIL });\n  }\n}\n\nfunction* getImage(payload) {\n  try {\n    const imageData = yield axios({\n      url: API.GET_IMAGE + payload,\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n      }\n    }).then(res => { return res.data });\n    yield put({ type: types.GET_IMAGE_SUCCESS, imageData: imageData });\n  } catch (error) {\n    yield put({ type: types.GET_IMAGE_FAIL });\n  }\n}\n\n\nfunction* actionWatcher() {\n  yield takeLatest(types.LOGIN, login);\n  yield takeLatest(types.GET_COUNTRIES, getCountries);\n  yield takeLatest(types.ADD_COUNTRY, addCountry);\n  yield takeLatest(types.ADD_IMAGE, addImage);\n  yield takeLatest(types.GET_COUNTRY_IMAGES, getCountryImages);\n  yield takeLatest(types.GET_IMAGE, getImage);\n}\n\nexport default function* rootSaga() {\n  yield all([\n    actionWatcher()\n  ]);\n}\n","import { LOGIN, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from '../constants/action-types';\n\nconst initialState = {\n  error: false,\n  loading: false,\n  authenticated: sessionStorage.getItem('admin')\n};\n\nexport const authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOGIN: {\n      return {\n        ...state,\n        authenticated: action.authenticated,\n        loading: true\n      }\n    }\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        authenticated: true,\n        loading: false,\n        error: false\n      }\n    case LOGIN_FAIL:\n      return {\n        ...state,\n        error: true,\n        loading: false\n      }\n    case LOGOUT: {\n      return {\n        ...state,\n        authenticated: false\n      }\n    }\n    default: return state;\n  }\n};\n","const COLORS = {\n  mainBlack: '#191C21',\n  contentBlack: '#303640',\n  brightBlack: '#3e4551',\n  mainWhite: '#FFFFFF',\n  contentWhite: '#E4E8E2',\n  dirtyWhite: '#d5d5d5',\n  cyan: '#24B5B4',\n  blue: '#2b87d8'\n};\n\nexport const LIGHT_MODE = {\n  mainBackgroundColor: COLORS.mainWhite,\n  contentBackgroundColor: COLORS.contentWhite,\n  highlightedColor: COLORS.blue,\n  textColor: COLORS.contentBlack,\n  secondary: COLORS.dirtyWhite\n};\n\nexport const DARK_MODE = {\n  mainBackgroundColor: COLORS.mainBlack,\n  contentBackgroundColor: COLORS.contentBlack,\n  highlightedColor: COLORS.cyan,\n  textColor: COLORS.contentWhite,\n  secondary: COLORS.brightBlack\n};\n","import { TOGGLE_DARK_MODE, CHANGE_SCREEN_SIZE, TOGGLE_MENU } from '../constants/action-types';\nimport { LIGHT_MODE, DARK_MODE } from '../constants/colors';\nimport { getScreenSize } from '../utils';\n\nconst initialState = {\n  darkMode: true,\n  color: DARK_MODE,\n  screenSize: getScreenSize(),\n  showMenu: false,\n};\n\n\nexport const layoutReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case TOGGLE_DARK_MODE: {\n      return {\n        ...state,\n        darkMode: action.darkMode,\n        color: action.darkMode ? DARK_MODE : LIGHT_MODE\n      }\n    }\n    case CHANGE_SCREEN_SIZE: {\n      return {\n        ...state,\n        screenSize: action.screenSize\n      }\n    }\n    case TOGGLE_MENU:\n      return {\n        ...state,\n        showMenu: action.showMenu,\n        showUserTooltip: false\n\n      }\n    default: return state;\n  }\n};\n","import * as types from '../constants/action-types';\n\nconst initialState = {\n  countries: [],\n  loading: false,\n  addingCountry: false\n};\n\nexport const countriesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.GET_COUNTRIES:\n      return {\n        ...state,\n        loading: true\n      }\n    case types.GET_COUNTRIES_SUCCESS:\n      return {\n        ...state,\n        countries: action.countries,\n        loading: false\n      }\n    case types.GET_COUNTRIES_FAIL:\n      return {\n        ...state,\n        loading: false\n      }\n    case types.ADD_COUNTRY:\n      return {\n        ...state,\n        addingCountry: true\n      }\n    case types.ADD_COUNTRY_SUCCESS:\n    case types.ADD_COUNTRY_FAIL:\n      return {\n        ...state,\n        addingCountry: false\n      }\n    default: return state;\n  }\n};\n","import * as types from '../constants/action-types';\n\nconst initialState = {\n  loading: false,\n  addingImage: false,\n  images: []\n};\n\nexport const imagesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.GET_IMAGE:\n      return {\n        ...state,\n        loading: true\n      }\n    case types.GET_IMAGE_SUCCESS:\n      return {\n        ...state,\n        images: action.image,\n        loading: false\n      }\n    case types.GET_IMAGE_FAIL:\n      return {\n        ...state,\n        loading: false\n      }\n    case types.ADD_IMAGE:\n      return {\n        ...state,\n        addingImage: true\n      }\n    case types.ADD_IMAGE_SUCCESS:\n    case types.ADD_IMAGE_FAIL:\n      return {\n        ...state,\n        addingImage: false\n      }\n    case types.GET_COUNTRY_IMAGES:\n      return {\n        ...state,\n        loading: true\n      }\n    case types.GET_COUNTRY_IMAGES_SUCCESS:\n      return {\n        ...state,\n        images: action.images,\n        loading: false\n      }\n    case types.GET_COUNTRY_IMAGES_FAIL:\n      return {\n        ...state,\n        loading: false\n      }\n    default: return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { authReducer } from './auth';\nimport { layoutReducer } from './layout';\nimport { countriesReducer } from './countries';\nimport { imagesReducer } from './images';\n\nconst reducers = combineReducers({\n  authReducer,\n  layoutReducer,\n  countriesReducer,\n  imagesReducer\n});\n\nexport default reducers;\n","import { createStore, compose, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../sagas/index';\nimport reducers from \"../reducers/index\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancer(applyMiddleware(sagaMiddleware)));\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/index';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <Route path='/'>\n        <React.StrictMode>\n          <App />\n        </React.StrictMode>\n      </Route>\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/loading.f0db446d.svg\";","module.exports = __webpack_public_path__ + \"static/media/roie-natan.dcfa3647.png\";"],"sourceRoot":""}